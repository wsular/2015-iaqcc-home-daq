''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Indoor Air Quality 2015 | Home interior DAQ
'
' Data acquistion program
'
' Laboratory for Atmospheric Research
' Department of Civil & Environmental Engineering
' Washington State University
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'update before deployment but DO NOT check-in other than empty string!
Const GIT_TAG = ""

' I/O
Const DF_TSI_PM = 1
Const DF_LICOR_CO2 = 2
Const DF_LICOR_H2O = 3
Const DF_LGR_CH4 = 4
Const DF_LGR_CO2 = 5
Const DF_LGR_H2O = 6
Const DF_TWOB_O3 = 7
'Const DF_TWOB_NOX = 8

Const COM_DYLOS = 1 'C1/2
'Const COM_LGR = 2 'C3/4
'Const COM_TWOB_NOX = 3 'C5/6
'Const COM_BT_MFC = 4 'C7/8
'Const COM_LICOR = ComRS232

' Analog scaling
Const TSI_PM_OFF = 0
Const TSI_PM_MLT = (1.0 - TSI_PM_OFF)/5000 '0-1.0 mg/m^3, 0-5V
Const LICOR_CO2_OFF = 0
Const LICOR_CO2_MLT = (1 - LICOR_CO2_OFF)/5000 '0-X ?, 0-5V
Const LICOR_H2O_OFF = 0
Const LICOR_H2O_MLT = (1 - LICOR_H2O_OFF)/5000 '0-X ?, 0-5V
Const LGR_CH4_OFF = 0
Const LGR_CH4_MLT = (100 - LGR_CH4_OFF)/5000 '0-100 ppm, 0-5V
Const LGR_CO2_OFF = 0
Const LGR_CO2_MLT = (5000 - LGR_CO2_OFF)/5000 '0-5000 ppm, 0-5V
Const LGR_H2O_OFF = 1
Const LGR_H2O_MLT = (50000 - LGR_H2O_OFF)/5000 '0-50000 ppm, 0-5V
Const TWOB_O3_OFF = 0
Const TWOB_O3_MLT = 0.2 '????
'Const TWOB_NOX_OFF = 0
'Const TWOB_NOX_MLT = 


'============================== INTERNALS ===================================
Const SCAN_INTV = 1
Const SCAN_BUFF = 10
Const INTEG = 250
Const STOP_WHEN_FULL = 0 

Public d(12)
Alias d(1)  = pm_tsi
Alias d(2)  = pm_c_dylos
Alias d(3)  = pm_f_dylos
Alias d(4)  = co2_licor
Alias d(5)  = h2o_licor
Alias d(6)  = ch4_lgr
Alias d(7)  = co2_lgr
Alias d(8)  = h2o_lgr
Alias d(9)  = o3_twob
Alias d(10) = no2_twob
Alias d(11) = no_twob
Alias d(12) = nox_twob

Units pm_tsi = mg/m^3
Units pm_c_dylos = ?
Units pm_f_dylos = ?
Units co2_licor = ppmv
Units h2o_licor = ppmv
Units ch4_lgr = ppmv
Units co2_lgr = ppmv
Units h2o_lgr = ppmv
Units o3_twob = ppbv
Units no2_twob = ?
Units no_twob = ?
Units nox_twob = ?

Public disable(4)
Alias disable(1) = disable_tsi
Alias disable(2) = disable_licor
Alias disable(3) = disable_lgr
Alias disable(4) = disable_twob_o3

Dim t_(7)
't_(1) = pm_tsi
't_(2) = co2_licor
't_(3) = h2o_licor
't_(4) = ch4_lgr
't_(5) = co2_lgr
't_(6) = h2o_lgr
't_(7) = o3_twob


'============================ DATA TABLES ===================================
DataTable(tsdata,True,10000)
  DataInterval(0,1,min,5)
  CardOut(STOP_WHEN_FULL,10000)
  Sample(12,d,IEEE4)
EndTable

DataTable(telemetry,True,1)
  DataInterval(0,5,min,1)
  Average(1,pm_tsi,IEEE4,pm_tsi=NAN)
  Average(1,co2_licor,IEEE4,disable_licor)
  Average(1,h2o_licor,IEEE4,disable_licor)
  Average(1,ch4_lgr,IEEE4,disable_lgr)
  Average(1,co2_lgr,IEEE4,disable_lgr)
  Average(1,h2o_lgr,IEEE4,disable_lgr)
  Average(1,o3_twob,IEEE4,disable_twob_o3)
EndTable


'================================== MENU ====================================
Const Yes = True
Const Cancel = False

Public test_scadabr As Boolean

DisplayMenu("Indoor AQ", -1)
  SubMenu("Debug")
    SubMenu("Monitor sensors")
      DisplayValue("Dusttrak PM", pm_tsi)
      DisplayValue("LI840A CO2", co2_licor)
      DisplayValue("LI840A H2O", h2o_licor)
      DisplayValue("LGR CH4", ch4_lgr)
      DisplayValue("LGR CO2", co2_lgr)
      DisplayValue("LGR H2O", h2o_lgr)
      DisplayValue("2B O3", o3_twob)
    EndSubMenu
    MenuItem("Test ScadaBR", test_scadabr)
      MenuPick(Cancel, Yes)
  EndSubMenu
EndMenu


'============================= SCADABR INTEGRATION ==================================
Include("CPU:scadabr_Enc.cr3")
Dim scadabr_socket As Long
Dim rtime(9) As Long
Dim scadabr_success As Boolean
Dim scadabr_resp As String * 256
Dim send_report_now As Boolean

Sub send_scadabr_data(payload As String * 512)
  Dim uri As String * 512
  Dim tstamp As String * 18
  RealTime(rtime)
  Sprintf(tstamp,"%04u%02u%02u%02u%02u%02u", rtime(1),rtime(2),rtime(3),rtime(4),rtime(5),rtime(6))
  uri = REPORT_URL & tstamp & payload
  scadabr_socket = HTTPGet(uri, scadabr_resp, "")
  scadabr_success = NOT (scadabr_socket OR Len(scadabr_resp))
EndSub

Sub send_test_ScadaBR()
  send_scadabr_data("&testing=0")
  test_scadabr = False
EndSub

Sub send_telemetry_report()
  Dim msg As String * 512
  Dim payload As String * 512
  '        (1)            (2)           (3)           (4)         (5) 
  msg  = "&pm_tsi=%f&co2_licor=%f&h2o_licor=%f&ch4_lgr=%f&co2_lgr=%f"
  '        (6)         (7)
  msg &= "&h2o_lgr=%f&o3_twob=%f"
  Sprintf(payload, msg, t_(1), t_(2), t_(3), t_(4), t_(5), t_(6), t_(7))
  send_scadabr_data(payload)
EndSub


'========================= MAIN PROGRAM =====================================
BeginProg
  Scan(SCAN_INTV,Sec,SCAN_BUFF,0)
    VoltDiff(pm_tsi,1,mv5000,DF_TSI_PM,True,0,INTEG,TSI_PM_MLT,TSI_PM_OFF)
    VoltDiff(co2_licor,1,mv5000,DF_LICOR_CO2,True,0,INTEG,LICOR_CO2_MLT,LICOR_CO2_OFF)
    VoltDiff(h2o_licor,1,mv5000,DF_LICOR_H2O,True,0,INTEG,LICOR_H2O_MLT,LICOR_H2O_OFF)
    VoltDiff(ch4_lgr,1,mv5000,DF_LGR_CH4,True,0,INTEG,LGR_CH4_MLT,LGR_CH4_OFF)
    VoltDiff(co2_lgr,1,mv5000,DF_LGR_CO2,True,0,INTEG,LGR_CO2_MLT,LGR_CO2_OFF)
    VoltDiff(h2o_lgr,1,mv5000,DF_LGR_H2O,True,0,INTEG,LGR_H2O_MLT,LGR_H2O_OFF)
    VoltDiff(o3_twob,1,mv5000,DF_TWOB_O3,True,0,INTEG,TWOB_O3_MLT,TWOB_O3_OFF)
'    VoltDiff(nox_twob,1,mv5000,DF_TWOB_NOX,True,0,INTEG,TWOB_NOX_MLT,TWOB_NOX_OFF)
    CallTable(tsdata)

  NextScan

  SlowSequence
  Scan(1,Sec,2,0)
    If (test_scadabr) Then
      send_test_ScadaBR()
    EndIf
    
    CallTable(telemetry)
    If (telemetry.Output(1,1)) Then
      GetRecord(t_(1),telemetry,1)
      send_telemetry_report()
    EndIf
  NextScan
EndProg

